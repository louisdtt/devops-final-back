version: 2
jobs:
  install:
    docker:
      - image: circleci/python:3.9.1
      - image: circleci/postgres:9.6.5
        environment:
          POSTGRES_DB: example
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: somePwd
          POSTGRES_PORT: 5432
          DATABASE_URL: postgresql://circleci:somePwd@localhost:5432/example
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/prod.txt" }}
            # Fallback to using the latest cache if no exact match is found
            - dependencies-
      - run: 
          name: Install dependencies
          command: pip install -r requirements/dev.txt
      # Upgrade dependencies for sqlalchemy and Flask-SQLAlchemy to pass unit tests
      - run:
          command: pip install sqlalchemy --upgrade && pip install Flask-SQLAlchemy --upgrade
      - run: 
          name: Setup dababase
          environment:
            FLASK_APP: /home/circleci/repo/autoapp.py
            FLASK_DEBUG: 0 
          command: flask db upgrade
      - run: 
          name: Flask test
          environment:
            FLASK_APP: /home/circleci/repo/autoapp.py
            FLASK_DEBUG: 0
          command: flask test
  back-deploy-heroku:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Heroku Deploy
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:main -f
      - run:
          name: Smoke Test
          command: |
            HTTPCODE=`curl -s -o /dev/null -w "%{http_code}" https://$HEROKU_APP_NAME.herokuapp.com/`
            if [[ "$HTTPCODE" -ne 200 ]]; then
              echo "heroku app not responding, failing deploy" \
              exit 1; \
            fi
  docker-build-and-push:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - deploy:
          name: Publish application to docker hub
          command: |
            docker login -e $DOCKER_HUB_EMAIL -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag app $DOCKER_HUB_USER_ID/devops-back-final:$CIRCLE_BUILD_NUM
            docker tag app $DOCKER_HUB_USER_ID/devops-back-final:latest
            docker push $DOCKER_HUB_USER_ID/devops-back-final:$CIRCLE_BUILD_NUM
            docker push $DOCKER_HUB_USER_ID/devops-back-final:latest
workflows:
  version: 2
  build-test:
    jobs:
      - install
      - back-deploy-heroku:
          requires:
            - install
      - docker-build-and-push:
          requires:
            - install