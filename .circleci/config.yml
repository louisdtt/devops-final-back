version: 2.1
workflows:
  version: 2
  devopsTP4:
    jobs:
      - install
      - back-deploy-heroku
      - docker-build-and-push
jobs:
  install:
    docker:
      - image: cimg/python:3.9.1
      - image: circleci/postgres:9.6.2
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/prod.txt" }}
      - run:
          name: install python and dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt
      
      - run: docker container run --name flask_db_test -e POSTGRES_PASSWORD=somePwd -e POSTGRES_USER=myUsr -p 5432:5432 -d postgres
      - run: sleep 1
      - run:
          name: db upgrade
          environment:
            FLASK_APP: /home/circleci/repo/autoapp.py
            FLASK_DEBUG: 0
            POSTGRES_USER: postgres
            POSTGRES_DB: bdtest
            POSTGRES_PASSWORD: somePwd
            POSTGRES_PORT: 5432
            DATABASE_URL: postgresql://postgres:somePwd@localhost:5432/postgres
          command: |
            . venv/bin/activate
            flask db upgrade
      # - run:
      #     name: flask test
      #     environment:
      #       FLASK_APP: /home/circleci/repo/autoapp.py
      #       FLASK_DEBUG: 0
      #       POSTGRES_USER: postgres
      #       POSTGRES_DB: bdtest
      #       POSTGRES_PASSWORD: somePwd
      #       POSTGRES_PORT: 5432
      #       DATABASE_URL: postgresql://postgres:somePwd@localhost:5432/postgres
      #     command: |
      #       . venv/bin/activate
      #       flask test
      - run: docker container stop flask_db_test
      - run: docker container rm flask_db_test
      - run: unset DATABASE_URL
  back-deploy-heroku:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Heroku Deploy
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:main
      - run:
          name: Smoke Test
          command: |
            HTTPCODE=`curl -s -o /dev/null -w "%{http_code}" https://devops-back-final.herokuapp.com//`
            if [[ "$HTTPCODE" -ne 200 ]]; then
              echo "heroku app not responding, failing deploy" \
              exit 1; \
            fi
  docker-build-and-push:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - deploy:
          name: Publish application to docker hub
          command: |
            docker login -e $DOCKER_HUB_EMAIL -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag app $DOCKER_HUB_USER_ID/devops-back-final:$CIRCLE_BUILD_NUM
            docker tag app $DOCKER_HUB_USER_ID/devops-back-final:latest
            docker push $DOCKER_HUB_USER_ID/devops-back-final:$CIRCLE_BUILD_NUM
            docker push $DOCKER_HUB_USER_ID/devops-back-final:latest